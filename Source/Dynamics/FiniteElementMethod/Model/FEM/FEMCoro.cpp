#include "FEMCoro.hpp"
#include <math.h>
#include <Eigen/Core>
void corotated_elas3d(float* val_ptr, const float* F_ptr, const float* R_ptr, const float* lam_ptr, const float* miu_ptr)
{
    Eigen::Map<Eigen::Matrix<float, 1, 1>>       val(val_ptr);
    Eigen::Map<const Eigen::Matrix<float, 3, 3>> F(F_ptr);
    Eigen::Map<const Eigen::Matrix<float, 3, 3>> R(R_ptr);
    Eigen::Map<const Eigen::Matrix<float, 1, 1>> lam(lam_ptr);
    Eigen::Map<const Eigen::Matrix<float, 1, 1>> miu(miu_ptr);
    // val(0,0) = 5.0E-1*lam(0,0)*pow((5.0E-1*(2*F(2,2)*R(2,2)+2*F(1,2)*R(1,2)+2*F(0,2)*R(0,2))+5.0E-1*(2*F(2,1)*R(2,1)+2*F(1,1)*R(1,1)+2*F(0,1)*R(0,1))+5.0E-1*(2*F(2,0)*R(2,0)+2*F(1,0)*R(1,0)+2*F(0,0)*R(0,0))-3),2)+miu(0,0)*pow(((1.0E+0*F(2,2)*R(2,2)+1.0E+0*F(1,2)*R(1,2)+1.0E+0*F(0,2)*R(0,2)-1),2)+5.0E-1*pow((F(2,1)*R(2,2)+R(2,1)*F(2,2)+F(1,1)*R(1,2)+R(1,1)*F(1,2)+F(0,1)*R(0,2)+R(0,1)*F(0,2)),2)+5.0E-1*pow((F(2,0)*R(2,2)+R(2,0)*F(2,2)+F(1,0)*R(1,2)+R(1,0)*F(1,2)+F(0,0)*R(0,2)+R(0,0)*F(0,2)),2)+pow((1.0E+0*F(2,1)*R(2,1)+1.0E+0*F(1,1)*R(1,1)+1.0E+0*F(0,1)*R(0,1)-1),2)+5.0E-1*pow((F(2,0)*R(2,1)+R(2,0)*F(2,1)+F(1,0)*R(1,1)+R(1,0)*F(1,1)+F(0,0)*R(0,1)+R(0,0)*F(0,1)),2)+pow((1.0E+0*F(2,0)*R(2,0)+1.0E+0*F(1,0)*R(1,0)+1.0E+0*F(0,0)*R(0,0)-1),2));
}
void corotated_elas3d_jac(float* jac_ptr, const float* F_ptr, const float* R_ptr, const float* lam_ptr, const float* miu_ptr)
{
    Eigen::Map<Eigen::Matrix<float, 1, 9>>       jac(jac_ptr);
    Eigen::Map<const Eigen::Matrix<float, 3, 3>> F(F_ptr);
    Eigen::Map<const Eigen::Matrix<float, 3, 3>> R(R_ptr);
    Eigen::Map<const Eigen::Matrix<float, 1, 1>> lam(lam_ptr);
    Eigen::Map<const Eigen::Matrix<float, 1, 1>> miu(miu_ptr);
    float                                        tt1 = 1.0E+0 * F(2, 0) * R(2, 0) + 1.0E+0 * F(1, 0) * R(1, 0) + 1.0E+0 * F(0, 0) * R(0, 0) - 1;
    float                                        tt2 = F(2, 0) * R(2, 1) + R(2, 0) * F(2, 1) + F(1, 0) * R(1, 1) + R(1, 0) * F(1, 1) + F(0, 0) * R(0, 1) + R(0, 0) * F(0, 1);
    float                                        tt3 = F(2, 0) * R(2, 2) + R(2, 0) * F(2, 2) + F(1, 0) * R(1, 2) + R(1, 0) * F(1, 2) + F(0, 0) * R(0, 2) + R(0, 0) * F(0, 2);
    float                                        tt4 = 5.0E-1 * (2 * F(2, 2) * R(2, 2) + 2 * F(1, 2) * R(1, 2) + 2 * F(0, 2) * R(0, 2)) + 5.0E-1 * (2 * F(2, 1) * R(2, 1) + 2 * F(1, 1) * R(1, 1) + 2 * F(0, 1) * R(0, 1)) + 5.0E-1 * (2 * F(2, 0) * R(2, 0) + 2 * F(1, 0) * R(1, 0) + 2 * F(0, 0) * R(0, 0)) - 3;
    float                                        tt5 = 1.0E+0 * F(2, 1) * R(2, 1) + 1.0E+0 * F(1, 1) * R(1, 1) + 1.0E+0 * F(0, 1) * R(0, 1) - 1;
    float                                        tt6 = F(2, 1) * R(2, 2) + R(2, 1) * F(2, 2) + F(1, 1) * R(1, 2) + R(1, 1) * F(1, 2) + F(0, 1) * R(0, 2) + R(0, 1) * F(0, 2);
    float                                        tt7 = 1.0E+0 * F(2, 2) * R(2, 2) + 1.0E+0 * F(1, 2) * R(1, 2) + 1.0E+0 * F(0, 2) * R(0, 2) - 1;
    jac(0, 0)                                        = 1.0E+0 * R(0, 0) * lam(0, 0) * tt4 + miu(0, 0) * (1.0E+0 * R(0, 2) * tt3 + 1.0E+0 * R(0, 1) * tt2 + 2.0E+0 * R(0, 0) * tt1);
    jac(0, 1)                                        = 1.0E+0 * lam(0, 0) * R(1, 0) * tt4 + miu(0, 0) * (1.0E+0 * R(1, 2) * tt3 + 1.0E+0 * R(1, 1) * tt2 + 2.0E+0 * R(1, 0) * tt1);
    jac(0, 2)                                        = 1.0E+0 * lam(0, 0) * R(2, 0) * tt4 + miu(0, 0) * (1.0E+0 * R(2, 2) * tt3 + 1.0E+0 * R(2, 1) * tt2 + 2.0E+0 * R(2, 0) * tt1);
    jac(0, 3)                                        = 1.0E+0 * lam(0, 0) * R(0, 1) * tt4 + miu(0, 0) * (1.0E+0 * R(0, 2) * tt6 + 2.0E+0 * R(0, 1) * tt5 + 1.0E+0 * R(0, 0) * tt2);
    jac(0, 4)                                        = 1.0E+0 * lam(0, 0) * R(1, 1) * tt4 + miu(0, 0) * (1.0E+0 * R(1, 2) * tt6 + 2.0E+0 * R(1, 1) * tt5 + 1.0E+0 * R(1, 0) * tt2);
    jac(0, 5)                                        = 1.0E+0 * lam(0, 0) * R(2, 1) * tt4 + miu(0, 0) * (1.0E+0 * R(2, 2) * tt6 + 2.0E+0 * R(2, 1) * tt5 + 1.0E+0 * R(2, 0) * tt2);
    jac(0, 6)                                        = 1.0E+0 * lam(0, 0) * R(0, 2) * tt4 + miu(0, 0) * (2.0E+0 * R(0, 2) * tt7 + 1.0E+0 * R(0, 1) * tt6 + 1.0E+0 * R(0, 0) * tt3);
    jac(0, 7)                                        = 1.0E+0 * lam(0, 0) * R(1, 2) * tt4 + miu(0, 0) * (2.0E+0 * R(1, 2) * tt7 + 1.0E+0 * R(1, 1) * tt6 + 1.0E+0 * R(1, 0) * tt3);
    jac(0, 8)                                        = 1.0E+0 * lam(0, 0) * R(2, 2) * tt4 + miu(0, 0) * (2.0E+0 * R(2, 2) * tt7 + 1.0E+0 * R(2, 1) * tt6 + 1.0E+0 * R(2, 0) * tt3);
}
void corotated_elas3d_hes(float* hes_ptr, const float* F_ptr, const float* R_ptr, const float* lam_ptr, const float* miu_ptr)
{
    Eigen::Map<Eigen::Matrix<float, 9, 9>>       hes(hes_ptr);
    Eigen::Map<const Eigen::Matrix<float, 3, 3>> F(F_ptr);
    Eigen::Map<const Eigen::Matrix<float, 3, 3>> R(R_ptr);
    Eigen::Map<const Eigen::Matrix<float, 1, 1>> lam(lam_ptr);
    Eigen::Map<const Eigen::Matrix<float, 1, 1>> miu(miu_ptr);
    float                                        tt1  = pow(R(0, 0), 2);
    float                                        tt2  = pow(R(0, 1), 2);
    float                                        tt3  = 1.0E+0 * tt2;
    float                                        tt4  = pow(R(0, 2), 2);
    float                                        tt5  = 1.0E+0 * tt4;
    float                                        tt6  = 1.0E+0 * R(0, 1) * R(1, 1);
    float                                        tt7  = 1.0E+0 * R(0, 2) * R(1, 2);
    float                                        tt8  = miu(0, 0) * (tt7 + tt6 + 2.0E+0 * R(0, 0) * R(1, 0)) + 1.0E+0 * R(0, 0) * lam(0, 0) * R(1, 0);
    float                                        tt9  = 1.0E+0 * R(0, 1) * R(2, 1);
    float                                        tt10 = 1.0E+0 * R(0, 2) * R(2, 2);
    float                                        tt11 = miu(0, 0) * (tt10 + tt9 + 2.0E+0 * R(0, 0) * R(2, 0)) + 1.0E+0 * R(0, 0) * lam(0, 0) * R(2, 0);
    float                                        tt12 = 1.0E+0 * R(0, 0) * miu(0, 0) * R(0, 1) + 1.0E+0 * R(0, 0) * lam(0, 0) * R(0, 1);
    float                                        tt13 = 1.0E+0 * R(0, 0) * lam(0, 0) * R(1, 1) + 1.0E+0 * miu(0, 0) * R(0, 1) * R(1, 0);
    float                                        tt14 = 1.0E+0 * R(0, 0) * lam(0, 0) * R(2, 1) + 1.0E+0 * miu(0, 0) * R(0, 1) * R(2, 0);
    float                                        tt15 = 1.0E+0 * R(0, 0) * miu(0, 0) * R(0, 2) + 1.0E+0 * R(0, 0) * lam(0, 0) * R(0, 2);
    float                                        tt16 = 1.0E+0 * R(0, 0) * lam(0, 0) * R(1, 2) + 1.0E+0 * miu(0, 0) * R(0, 2) * R(1, 0);
    float                                        tt17 = 1.0E+0 * R(0, 0) * lam(0, 0) * R(2, 2) + 1.0E+0 * miu(0, 0) * R(0, 2) * R(2, 0);
    float                                        tt18 = pow(R(1, 0), 2);
    float                                        tt19 = pow(R(1, 1), 2);
    float                                        tt20 = 1.0E+0 * tt19;
    float                                        tt21 = pow(R(1, 2), 2);
    float                                        tt22 = 1.0E+0 * tt21;
    float                                        tt23 = 1.0E+0 * R(1, 1) * R(2, 1);
    float                                        tt24 = 1.0E+0 * R(1, 2) * R(2, 2);
    float                                        tt25 = miu(0, 0) * (tt24 + tt23 + 2.0E+0 * R(1, 0) * R(2, 0)) + 1.0E+0 * lam(0, 0) * R(1, 0) * R(2, 0);
    float                                        tt26 = 1.0E+0 * R(0, 0) * miu(0, 0) * R(1, 1) + 1.0E+0 * lam(0, 0) * R(0, 1) * R(1, 0);
    float                                        tt27 = 1.0E+0 * miu(0, 0) * R(1, 0) * R(1, 1) + 1.0E+0 * lam(0, 0) * R(1, 0) * R(1, 1);
    float                                        tt28 = 1.0E+0 * lam(0, 0) * R(1, 0) * R(2, 1) + 1.0E+0 * miu(0, 0) * R(1, 1) * R(2, 0);
    float                                        tt29 = 1.0E+0 * R(0, 0) * miu(0, 0) * R(1, 2) + 1.0E+0 * lam(0, 0) * R(0, 2) * R(1, 0);
    float                                        tt30 = 1.0E+0 * miu(0, 0) * R(1, 0) * R(1, 2) + 1.0E+0 * lam(0, 0) * R(1, 0) * R(1, 2);
    float                                        tt31 = 1.0E+0 * lam(0, 0) * R(1, 0) * R(2, 2) + 1.0E+0 * miu(0, 0) * R(1, 2) * R(2, 0);
    float                                        tt32 = pow(R(2, 0), 2);
    float                                        tt33 = pow(R(2, 1), 2);
    float                                        tt34 = 1.0E+0 * tt33;
    float                                        tt35 = pow(R(2, 2), 2);
    float                                        tt36 = 1.0E+0 * tt35;
    float                                        tt37 = 1.0E+0 * R(0, 0) * miu(0, 0) * R(2, 1) + 1.0E+0 * lam(0, 0) * R(0, 1) * R(2, 0);
    float                                        tt38 = 1.0E+0 * miu(0, 0) * R(1, 0) * R(2, 1) + 1.0E+0 * lam(0, 0) * R(1, 1) * R(2, 0);
    float                                        tt39 = 1.0E+0 * miu(0, 0) * R(2, 0) * R(2, 1) + 1.0E+0 * lam(0, 0) * R(2, 0) * R(2, 1);
    float                                        tt40 = 1.0E+0 * R(0, 0) * miu(0, 0) * R(2, 2) + 1.0E+0 * lam(0, 0) * R(0, 2) * R(2, 0);
    float                                        tt41 = 1.0E+0 * miu(0, 0) * R(1, 0) * R(2, 2) + 1.0E+0 * lam(0, 0) * R(1, 2) * R(2, 0);
    float                                        tt42 = 1.0E+0 * miu(0, 0) * R(2, 0) * R(2, 2) + 1.0E+0 * lam(0, 0) * R(2, 0) * R(2, 2);
    float                                        tt43 = 1.0E+0 * tt1;
    float                                        tt44 = 1.0E+0 * R(0, 0) * R(1, 0);
    float                                        tt45 = miu(0, 0) * (tt7 + 2.0E+0 * R(0, 1) * R(1, 1) + tt44) + 1.0E+0 * lam(0, 0) * R(0, 1) * R(1, 1);
    float                                        tt46 = 1.0E+0 * R(0, 0) * R(2, 0);
    float                                        tt47 = miu(0, 0) * (tt10 + 2.0E+0 * R(0, 1) * R(2, 1) + tt46) + 1.0E+0 * lam(0, 0) * R(0, 1) * R(2, 1);
    float                                        tt48 = 1.0E+0 * miu(0, 0) * R(0, 1) * R(0, 2) + 1.0E+0 * lam(0, 0) * R(0, 1) * R(0, 2);
    float                                        tt49 = 1.0E+0 * lam(0, 0) * R(0, 1) * R(1, 2) + 1.0E+0 * miu(0, 0) * R(0, 2) * R(1, 1);
    float                                        tt50 = 1.0E+0 * lam(0, 0) * R(0, 1) * R(2, 2) + 1.0E+0 * miu(0, 0) * R(0, 2) * R(2, 1);
    float                                        tt51 = 1.0E+0 * tt18;
    float                                        tt52 = 1.0E+0 * R(1, 0) * R(2, 0);
    float                                        tt53 = miu(0, 0) * (tt24 + 2.0E+0 * R(1, 1) * R(2, 1) + tt52) + 1.0E+0 * lam(0, 0) * R(1, 1) * R(2, 1);
    float                                        tt54 = 1.0E+0 * miu(0, 0) * R(0, 1) * R(1, 2) + 1.0E+0 * lam(0, 0) * R(0, 2) * R(1, 1);
    float                                        tt55 = 1.0E+0 * miu(0, 0) * R(1, 1) * R(1, 2) + 1.0E+0 * lam(0, 0) * R(1, 1) * R(1, 2);
    float                                        tt56 = 1.0E+0 * lam(0, 0) * R(1, 1) * R(2, 2) + 1.0E+0 * miu(0, 0) * R(1, 2) * R(2, 1);
    float                                        tt57 = 1.0E+0 * tt32;
    float                                        tt58 = 1.0E+0 * miu(0, 0) * R(0, 1) * R(2, 2) + 1.0E+0 * lam(0, 0) * R(0, 2) * R(2, 1);
    float                                        tt59 = 1.0E+0 * miu(0, 0) * R(1, 1) * R(2, 2) + 1.0E+0 * lam(0, 0) * R(1, 2) * R(2, 1);
    float                                        tt60 = 1.0E+0 * miu(0, 0) * R(2, 1) * R(2, 2) + 1.0E+0 * lam(0, 0) * R(2, 1) * R(2, 2);
    float                                        tt61 = miu(0, 0) * (2.0E+0 * R(0, 2) * R(1, 2) + tt6 + tt44) + 1.0E+0 * lam(0, 0) * R(0, 2) * R(1, 2);
    float                                        tt62 = miu(0, 0) * (2.0E+0 * R(0, 2) * R(2, 2) + tt9 + tt46) + 1.0E+0 * lam(0, 0) * R(0, 2) * R(2, 2);
    float                                        tt63 = miu(0, 0) * (2.0E+0 * R(1, 2) * R(2, 2) + tt23 + tt52) + 1.0E+0 * lam(0, 0) * R(1, 2) * R(2, 2);
    hes(0, 0)                                         = miu(0, 0) * (tt5 + tt3 + 2.0E+0 * tt1) + 1.0E+0 * tt1 * lam(0, 0);
    hes(0, 1)                                         = tt8;
    hes(0, 2)                                         = tt11;
    hes(0, 3)                                         = tt12;
    hes(0, 4)                                         = tt13;
    hes(0, 5)                                         = tt14;
    hes(0, 6)                                         = tt15;
    hes(0, 7)                                         = tt16;
    hes(0, 8)                                         = tt17;
    hes(1, 0)                                         = tt8;
    hes(1, 1)                                         = miu(0, 0) * (tt22 + tt20 + 2.0E+0 * tt18) + 1.0E+0 * lam(0, 0) * tt18;
    hes(1, 2)                                         = tt25;
    hes(1, 3)                                         = tt26;
    hes(1, 4)                                         = tt27;
    hes(1, 5)                                         = tt28;
    hes(1, 6)                                         = tt29;
    hes(1, 7)                                         = tt30;
    hes(1, 8)                                         = tt31;
    hes(2, 0)                                         = tt11;
    hes(2, 1)                                         = tt25;
    hes(2, 2)                                         = miu(0, 0) * (tt36 + tt34 + 2.0E+0 * tt32) + 1.0E+0 * lam(0, 0) * tt32;
    hes(2, 3)                                         = tt37;
    hes(2, 4)                                         = tt38;
    hes(2, 5)                                         = tt39;
    hes(2, 6)                                         = tt40;
    hes(2, 7)                                         = tt41;
    hes(2, 8)                                         = tt42;
    hes(3, 0)                                         = tt12;
    hes(3, 1)                                         = tt26;
    hes(3, 2)                                         = tt37;
    hes(3, 3)                                         = miu(0, 0) * (tt5 + 2.0E+0 * tt2 + tt43) + 1.0E+0 * lam(0, 0) * tt2;
    hes(3, 4)                                         = tt45;
    hes(3, 5)                                         = tt47;
    hes(3, 6)                                         = tt48;
    hes(3, 7)                                         = tt49;
    hes(3, 8)                                         = tt50;
    hes(4, 0)                                         = tt13;
    hes(4, 1)                                         = tt27;
    hes(4, 2)                                         = tt38;
    hes(4, 3)                                         = tt45;
    hes(4, 4)                                         = miu(0, 0) * (tt22 + 2.0E+0 * tt19 + tt51) + 1.0E+0 * lam(0, 0) * tt19;
    hes(4, 5)                                         = tt53;
    hes(4, 6)                                         = tt54;
    hes(4, 7)                                         = tt55;
    hes(4, 8)                                         = tt56;
    hes(5, 0)                                         = tt14;
    hes(5, 1)                                         = tt28;
    hes(5, 2)                                         = tt39;
    hes(5, 3)                                         = tt47;
    hes(5, 4)                                         = tt53;
    hes(5, 5)                                         = miu(0, 0) * (tt36 + 2.0E+0 * tt33 + tt57) + 1.0E+0 * lam(0, 0) * tt33;
    hes(5, 6)                                         = tt58;
    hes(5, 7)                                         = tt59;
    hes(5, 8)                                         = tt60;
    hes(6, 0)                                         = tt15;
    hes(6, 1)                                         = tt29;
    hes(6, 2)                                         = tt40;
    hes(6, 3)                                         = tt48;
    hes(6, 4)                                         = tt54;
    hes(6, 5)                                         = tt58;
    hes(6, 6)                                         = miu(0, 0) * (2.0E+0 * tt4 + tt3 + tt43) + 1.0E+0 * lam(0, 0) * tt4;
    hes(6, 7)                                         = tt61;
    hes(6, 8)                                         = tt62;
    hes(7, 0)                                         = tt16;
    hes(7, 1)                                         = tt30;
    hes(7, 2)                                         = tt41;
    hes(7, 3)                                         = tt49;
    hes(7, 4)                                         = tt55;
    hes(7, 5)                                         = tt59;
    hes(7, 6)                                         = tt61;
    hes(7, 7)                                         = miu(0, 0) * (2.0E+0 * tt21 + tt20 + tt51) + 1.0E+0 * lam(0, 0) * tt21;
    hes(7, 8)                                         = tt63;
    hes(8, 0)                                         = tt17;
    hes(8, 1)                                         = tt31;
    hes(8, 2)                                         = tt42;
    hes(8, 3)                                         = tt50;
    hes(8, 4)                                         = tt56;
    hes(8, 5)                                         = tt60;
    hes(8, 6)                                         = tt62;
    hes(8, 7)                                         = tt63;
    hes(8, 8)                                         = miu(0, 0) * (2.0E+0 * tt35 + tt34 + tt57) + 1.0E+0 * lam(0, 0) * tt35;
}
void corotated_elas3d(double* val_ptr, const double* F_ptr, const double* R_ptr, const double* lam_ptr, const double* miu_ptr)
{
    Eigen::Map<Eigen::Matrix<double, 1, 1>>       val(val_ptr);
    Eigen::Map<const Eigen::Matrix<double, 3, 3>> F(F_ptr);
    Eigen::Map<const Eigen::Matrix<double, 3, 3>> R(R_ptr);
    Eigen::Map<const Eigen::Matrix<double, 1, 1>> lam(lam_ptr);
    Eigen::Map<const Eigen::Matrix<double, 1, 1>> miu(miu_ptr);
    // val(0,0) = 5.0E-1*lam(0,0)*pow((5.0E-1*(2*F(2,2)*R(2,2)+2*F(1,2)*R(1,2)+2*F(0,2)*R(0,2))+5.0E-1*(2*F(2,1)*R(2,1)+2*F(1,1)*R(1,1)+2*F(0,1)*R(0,1))+5.0E-1*(2*F(2,0)*R(2,0)+2*F(1,0)*R(1,0)+2*F(0,0)*R(0,0))-3),2)+miu(0,0)*pow(((1.0E+0*F(2,2)*R(2,2)+1.0E+0*F(1,2)*R(1,2)+1.0E+0*F(0,2)*R(0,2)-1),2)+5.0E-1*pow((F(2,1)*R(2,2)+R(2,1)*F(2,2)+F(1,1)*R(1,2)+R(1,1)*F(1,2)+F(0,1)*R(0,2)+R(0,1)*F(0,2)),2)+5.0E-1*pow((F(2,0)*R(2,2)+R(2,0)*F(2,2)+F(1,0)*R(1,2)+R(1,0)*F(1,2)+F(0,0)*R(0,2)+R(0,0)*F(0,2)),2)+pow((1.0E+0*F(2,1)*R(2,1)+1.0E+0*F(1,1)*R(1,1)+1.0E+0*F(0,1)*R(0,1)-1),2)+5.0E-1*pow((F(2,0)*R(2,1)+R(2,0)*F(2,1)+F(1,0)*R(1,1)+R(1,0)*F(1,1)+F(0,0)*R(0,1)+R(0,0)*F(0,1)),2)+pow((1.0E+0*F(2,0)*R(2,0)+1.0E+0*F(1,0)*R(1,0)+1.0E+0*F(0,0)*R(0,0)-1),2));
}
void corotated_elas3d_jac(double* jac_ptr, const double* F_ptr, const double* R_ptr, const double* lam_ptr, const double* miu_ptr)
{
    Eigen::Map<Eigen::Matrix<double, 1, 9>>       jac(jac_ptr);
    Eigen::Map<const Eigen::Matrix<double, 3, 3>> F(F_ptr);
    Eigen::Map<const Eigen::Matrix<double, 3, 3>> R(R_ptr);
    Eigen::Map<const Eigen::Matrix<double, 1, 1>> lam(lam_ptr);
    Eigen::Map<const Eigen::Matrix<double, 1, 1>> miu(miu_ptr);
    double                                        tt1 = 1.0E+0 * F(2, 0) * R(2, 0) + 1.0E+0 * F(1, 0) * R(1, 0) + 1.0E+0 * F(0, 0) * R(0, 0) - 1;
    double                                        tt2 = F(2, 0) * R(2, 1) + R(2, 0) * F(2, 1) + F(1, 0) * R(1, 1) + R(1, 0) * F(1, 1) + F(0, 0) * R(0, 1) + R(0, 0) * F(0, 1);
    double                                        tt3 = F(2, 0) * R(2, 2) + R(2, 0) * F(2, 2) + F(1, 0) * R(1, 2) + R(1, 0) * F(1, 2) + F(0, 0) * R(0, 2) + R(0, 0) * F(0, 2);
    double                                        tt4 = 5.0E-1 * (2 * F(2, 2) * R(2, 2) + 2 * F(1, 2) * R(1, 2) + 2 * F(0, 2) * R(0, 2)) + 5.0E-1 * (2 * F(2, 1) * R(2, 1) + 2 * F(1, 1) * R(1, 1) + 2 * F(0, 1) * R(0, 1)) + 5.0E-1 * (2 * F(2, 0) * R(2, 0) + 2 * F(1, 0) * R(1, 0) + 2 * F(0, 0) * R(0, 0)) - 3;
    double                                        tt5 = 1.0E+0 * F(2, 1) * R(2, 1) + 1.0E+0 * F(1, 1) * R(1, 1) + 1.0E+0 * F(0, 1) * R(0, 1) - 1;
    double                                        tt6 = F(2, 1) * R(2, 2) + R(2, 1) * F(2, 2) + F(1, 1) * R(1, 2) + R(1, 1) * F(1, 2) + F(0, 1) * R(0, 2) + R(0, 1) * F(0, 2);
    double                                        tt7 = 1.0E+0 * F(2, 2) * R(2, 2) + 1.0E+0 * F(1, 2) * R(1, 2) + 1.0E+0 * F(0, 2) * R(0, 2) - 1;
    jac(0, 0)                                         = 1.0E+0 * R(0, 0) * lam(0, 0) * tt4 + miu(0, 0) * (1.0E+0 * R(0, 2) * tt3 + 1.0E+0 * R(0, 1) * tt2 + 2.0E+0 * R(0, 0) * tt1);
    jac(0, 1)                                         = 1.0E+0 * lam(0, 0) * R(1, 0) * tt4 + miu(0, 0) * (1.0E+0 * R(1, 2) * tt3 + 1.0E+0 * R(1, 1) * tt2 + 2.0E+0 * R(1, 0) * tt1);
    jac(0, 2)                                         = 1.0E+0 * lam(0, 0) * R(2, 0) * tt4 + miu(0, 0) * (1.0E+0 * R(2, 2) * tt3 + 1.0E+0 * R(2, 1) * tt2 + 2.0E+0 * R(2, 0) * tt1);
    jac(0, 3)                                         = 1.0E+0 * lam(0, 0) * R(0, 1) * tt4 + miu(0, 0) * (1.0E+0 * R(0, 2) * tt6 + 2.0E+0 * R(0, 1) * tt5 + 1.0E+0 * R(0, 0) * tt2);
    jac(0, 4)                                         = 1.0E+0 * lam(0, 0) * R(1, 1) * tt4 + miu(0, 0) * (1.0E+0 * R(1, 2) * tt6 + 2.0E+0 * R(1, 1) * tt5 + 1.0E+0 * R(1, 0) * tt2);
    jac(0, 5)                                         = 1.0E+0 * lam(0, 0) * R(2, 1) * tt4 + miu(0, 0) * (1.0E+0 * R(2, 2) * tt6 + 2.0E+0 * R(2, 1) * tt5 + 1.0E+0 * R(2, 0) * tt2);
    jac(0, 6)                                         = 1.0E+0 * lam(0, 0) * R(0, 2) * tt4 + miu(0, 0) * (2.0E+0 * R(0, 2) * tt7 + 1.0E+0 * R(0, 1) * tt6 + 1.0E+0 * R(0, 0) * tt3);
    jac(0, 7)                                         = 1.0E+0 * lam(0, 0) * R(1, 2) * tt4 + miu(0, 0) * (2.0E+0 * R(1, 2) * tt7 + 1.0E+0 * R(1, 1) * tt6 + 1.0E+0 * R(1, 0) * tt3);
    jac(0, 8)                                         = 1.0E+0 * lam(0, 0) * R(2, 2) * tt4 + miu(0, 0) * (2.0E+0 * R(2, 2) * tt7 + 1.0E+0 * R(2, 1) * tt6 + 1.0E+0 * R(2, 0) * tt3);
}
void corotated_elas3d_hes(double* hes_ptr, const double* F_ptr, const double* R_ptr, const double* lam_ptr, const double* miu_ptr)
{
    Eigen::Map<Eigen::Matrix<double, 9, 9>>       hes(hes_ptr);
    Eigen::Map<const Eigen::Matrix<double, 3, 3>> F(F_ptr);
    Eigen::Map<const Eigen::Matrix<double, 3, 3>> R(R_ptr);
    Eigen::Map<const Eigen::Matrix<double, 1, 1>> lam(lam_ptr);
    Eigen::Map<const Eigen::Matrix<double, 1, 1>> miu(miu_ptr);
    double                                        tt1  = pow(R(0, 0), 2);
    double                                        tt2  = pow(R(0, 1), 2);
    double                                        tt3  = 1.0E+0 * tt2;
    double                                        tt4  = pow(R(0, 2), 2);
    double                                        tt5  = 1.0E+0 * tt4;
    double                                        tt6  = 1.0E+0 * R(0, 1) * R(1, 1);
    double                                        tt7  = 1.0E+0 * R(0, 2) * R(1, 2);
    double                                        tt8  = miu(0, 0) * (tt7 + tt6 + 2.0E+0 * R(0, 0) * R(1, 0)) + 1.0E+0 * R(0, 0) * lam(0, 0) * R(1, 0);
    double                                        tt9  = 1.0E+0 * R(0, 1) * R(2, 1);
    double                                        tt10 = 1.0E+0 * R(0, 2) * R(2, 2);
    double                                        tt11 = miu(0, 0) * (tt10 + tt9 + 2.0E+0 * R(0, 0) * R(2, 0)) + 1.0E+0 * R(0, 0) * lam(0, 0) * R(2, 0);
    double                                        tt12 = 1.0E+0 * R(0, 0) * miu(0, 0) * R(0, 1) + 1.0E+0 * R(0, 0) * lam(0, 0) * R(0, 1);
    double                                        tt13 = 1.0E+0 * R(0, 0) * lam(0, 0) * R(1, 1) + 1.0E+0 * miu(0, 0) * R(0, 1) * R(1, 0);
    double                                        tt14 = 1.0E+0 * R(0, 0) * lam(0, 0) * R(2, 1) + 1.0E+0 * miu(0, 0) * R(0, 1) * R(2, 0);
    double                                        tt15 = 1.0E+0 * R(0, 0) * miu(0, 0) * R(0, 2) + 1.0E+0 * R(0, 0) * lam(0, 0) * R(0, 2);
    double                                        tt16 = 1.0E+0 * R(0, 0) * lam(0, 0) * R(1, 2) + 1.0E+0 * miu(0, 0) * R(0, 2) * R(1, 0);
    double                                        tt17 = 1.0E+0 * R(0, 0) * lam(0, 0) * R(2, 2) + 1.0E+0 * miu(0, 0) * R(0, 2) * R(2, 0);
    double                                        tt18 = pow(R(1, 0), 2);
    double                                        tt19 = pow(R(1, 1), 2);
    double                                        tt20 = 1.0E+0 * tt19;
    double                                        tt21 = pow(R(1, 2), 2);
    double                                        tt22 = 1.0E+0 * tt21;
    double                                        tt23 = 1.0E+0 * R(1, 1) * R(2, 1);
    double                                        tt24 = 1.0E+0 * R(1, 2) * R(2, 2);
    double                                        tt25 = miu(0, 0) * (tt24 + tt23 + 2.0E+0 * R(1, 0) * R(2, 0)) + 1.0E+0 * lam(0, 0) * R(1, 0) * R(2, 0);
    double                                        tt26 = 1.0E+0 * R(0, 0) * miu(0, 0) * R(1, 1) + 1.0E+0 * lam(0, 0) * R(0, 1) * R(1, 0);
    double                                        tt27 = 1.0E+0 * miu(0, 0) * R(1, 0) * R(1, 1) + 1.0E+0 * lam(0, 0) * R(1, 0) * R(1, 1);
    double                                        tt28 = 1.0E+0 * lam(0, 0) * R(1, 0) * R(2, 1) + 1.0E+0 * miu(0, 0) * R(1, 1) * R(2, 0);
    double                                        tt29 = 1.0E+0 * R(0, 0) * miu(0, 0) * R(1, 2) + 1.0E+0 * lam(0, 0) * R(0, 2) * R(1, 0);
    double                                        tt30 = 1.0E+0 * miu(0, 0) * R(1, 0) * R(1, 2) + 1.0E+0 * lam(0, 0) * R(1, 0) * R(1, 2);
    double                                        tt31 = 1.0E+0 * lam(0, 0) * R(1, 0) * R(2, 2) + 1.0E+0 * miu(0, 0) * R(1, 2) * R(2, 0);
    double                                        tt32 = pow(R(2, 0), 2);
    double                                        tt33 = pow(R(2, 1), 2);
    double                                        tt34 = 1.0E+0 * tt33;
    double                                        tt35 = pow(R(2, 2), 2);
    double                                        tt36 = 1.0E+0 * tt35;
    double                                        tt37 = 1.0E+0 * R(0, 0) * miu(0, 0) * R(2, 1) + 1.0E+0 * lam(0, 0) * R(0, 1) * R(2, 0);
    double                                        tt38 = 1.0E+0 * miu(0, 0) * R(1, 0) * R(2, 1) + 1.0E+0 * lam(0, 0) * R(1, 1) * R(2, 0);
    double                                        tt39 = 1.0E+0 * miu(0, 0) * R(2, 0) * R(2, 1) + 1.0E+0 * lam(0, 0) * R(2, 0) * R(2, 1);
    double                                        tt40 = 1.0E+0 * R(0, 0) * miu(0, 0) * R(2, 2) + 1.0E+0 * lam(0, 0) * R(0, 2) * R(2, 0);
    double                                        tt41 = 1.0E+0 * miu(0, 0) * R(1, 0) * R(2, 2) + 1.0E+0 * lam(0, 0) * R(1, 2) * R(2, 0);
    double                                        tt42 = 1.0E+0 * miu(0, 0) * R(2, 0) * R(2, 2) + 1.0E+0 * lam(0, 0) * R(2, 0) * R(2, 2);
    double                                        tt43 = 1.0E+0 * tt1;
    double                                        tt44 = 1.0E+0 * R(0, 0) * R(1, 0);
    double                                        tt45 = miu(0, 0) * (tt7 + 2.0E+0 * R(0, 1) * R(1, 1) + tt44) + 1.0E+0 * lam(0, 0) * R(0, 1) * R(1, 1);
    double                                        tt46 = 1.0E+0 * R(0, 0) * R(2, 0);
    double                                        tt47 = miu(0, 0) * (tt10 + 2.0E+0 * R(0, 1) * R(2, 1) + tt46) + 1.0E+0 * lam(0, 0) * R(0, 1) * R(2, 1);
    double                                        tt48 = 1.0E+0 * miu(0, 0) * R(0, 1) * R(0, 2) + 1.0E+0 * lam(0, 0) * R(0, 1) * R(0, 2);
    double                                        tt49 = 1.0E+0 * lam(0, 0) * R(0, 1) * R(1, 2) + 1.0E+0 * miu(0, 0) * R(0, 2) * R(1, 1);
    double                                        tt50 = 1.0E+0 * lam(0, 0) * R(0, 1) * R(2, 2) + 1.0E+0 * miu(0, 0) * R(0, 2) * R(2, 1);
    double                                        tt51 = 1.0E+0 * tt18;
    double                                        tt52 = 1.0E+0 * R(1, 0) * R(2, 0);
    double                                        tt53 = miu(0, 0) * (tt24 + 2.0E+0 * R(1, 1) * R(2, 1) + tt52) + 1.0E+0 * lam(0, 0) * R(1, 1) * R(2, 1);
    double                                        tt54 = 1.0E+0 * miu(0, 0) * R(0, 1) * R(1, 2) + 1.0E+0 * lam(0, 0) * R(0, 2) * R(1, 1);
    double                                        tt55 = 1.0E+0 * miu(0, 0) * R(1, 1) * R(1, 2) + 1.0E+0 * lam(0, 0) * R(1, 1) * R(1, 2);
    double                                        tt56 = 1.0E+0 * lam(0, 0) * R(1, 1) * R(2, 2) + 1.0E+0 * miu(0, 0) * R(1, 2) * R(2, 1);
    double                                        tt57 = 1.0E+0 * tt32;
    double                                        tt58 = 1.0E+0 * miu(0, 0) * R(0, 1) * R(2, 2) + 1.0E+0 * lam(0, 0) * R(0, 2) * R(2, 1);
    double                                        tt59 = 1.0E+0 * miu(0, 0) * R(1, 1) * R(2, 2) + 1.0E+0 * lam(0, 0) * R(1, 2) * R(2, 1);
    double                                        tt60 = 1.0E+0 * miu(0, 0) * R(2, 1) * R(2, 2) + 1.0E+0 * lam(0, 0) * R(2, 1) * R(2, 2);
    double                                        tt61 = miu(0, 0) * (2.0E+0 * R(0, 2) * R(1, 2) + tt6 + tt44) + 1.0E+0 * lam(0, 0) * R(0, 2) * R(1, 2);
    double                                        tt62 = miu(0, 0) * (2.0E+0 * R(0, 2) * R(2, 2) + tt9 + tt46) + 1.0E+0 * lam(0, 0) * R(0, 2) * R(2, 2);
    double                                        tt63 = miu(0, 0) * (2.0E+0 * R(1, 2) * R(2, 2) + tt23 + tt52) + 1.0E+0 * lam(0, 0) * R(1, 2) * R(2, 2);
    hes(0, 0)                                          = miu(0, 0) * (tt5 + tt3 + 2.0E+0 * tt1) + 1.0E+0 * tt1 * lam(0, 0);
    hes(0, 1)                                          = tt8;
    hes(0, 2)                                          = tt11;
    hes(0, 3)                                          = tt12;
    hes(0, 4)                                          = tt13;
    hes(0, 5)                                          = tt14;
    hes(0, 6)                                          = tt15;
    hes(0, 7)                                          = tt16;
    hes(0, 8)                                          = tt17;
    hes(1, 0)                                          = tt8;
    hes(1, 1)                                          = miu(0, 0) * (tt22 + tt20 + 2.0E+0 * tt18) + 1.0E+0 * lam(0, 0) * tt18;
    hes(1, 2)                                          = tt25;
    hes(1, 3)                                          = tt26;
    hes(1, 4)                                          = tt27;
    hes(1, 5)                                          = tt28;
    hes(1, 6)                                          = tt29;
    hes(1, 7)                                          = tt30;
    hes(1, 8)                                          = tt31;
    hes(2, 0)                                          = tt11;
    hes(2, 1)                                          = tt25;
    hes(2, 2)                                          = miu(0, 0) * (tt36 + tt34 + 2.0E+0 * tt32) + 1.0E+0 * lam(0, 0) * tt32;
    hes(2, 3)                                          = tt37;
    hes(2, 4)                                          = tt38;
    hes(2, 5)                                          = tt39;
    hes(2, 6)                                          = tt40;
    hes(2, 7)                                          = tt41;
    hes(2, 8)                                          = tt42;
    hes(3, 0)                                          = tt12;
    hes(3, 1)                                          = tt26;
    hes(3, 2)                                          = tt37;
    hes(3, 3)                                          = miu(0, 0) * (tt5 + 2.0E+0 * tt2 + tt43) + 1.0E+0 * lam(0, 0) * tt2;
    hes(3, 4)                                          = tt45;
    hes(3, 5)                                          = tt47;
    hes(3, 6)                                          = tt48;
    hes(3, 7)                                          = tt49;
    hes(3, 8)                                          = tt50;
    hes(4, 0)                                          = tt13;
    hes(4, 1)                                          = tt27;
    hes(4, 2)                                          = tt38;
    hes(4, 3)                                          = tt45;
    hes(4, 4)                                          = miu(0, 0) * (tt22 + 2.0E+0 * tt19 + tt51) + 1.0E+0 * lam(0, 0) * tt19;
    hes(4, 5)                                          = tt53;
    hes(4, 6)                                          = tt54;
    hes(4, 7)                                          = tt55;
    hes(4, 8)                                          = tt56;
    hes(5, 0)                                          = tt14;
    hes(5, 1)                                          = tt28;
    hes(5, 2)                                          = tt39;
    hes(5, 3)                                          = tt47;
    hes(5, 4)                                          = tt53;
    hes(5, 5)                                          = miu(0, 0) * (tt36 + 2.0E+0 * tt33 + tt57) + 1.0E+0 * lam(0, 0) * tt33;
    hes(5, 6)                                          = tt58;
    hes(5, 7)                                          = tt59;
    hes(5, 8)                                          = tt60;
    hes(6, 0)                                          = tt15;
    hes(6, 1)                                          = tt29;
    hes(6, 2)                                          = tt40;
    hes(6, 3)                                          = tt48;
    hes(6, 4)                                          = tt54;
    hes(6, 5)                                          = tt58;
    hes(6, 6)                                          = miu(0, 0) * (2.0E+0 * tt4 + tt3 + tt43) + 1.0E+0 * lam(0, 0) * tt4;
    hes(6, 7)                                          = tt61;
    hes(6, 8)                                          = tt62;
    hes(7, 0)                                          = tt16;
    hes(7, 1)                                          = tt30;
    hes(7, 2)                                          = tt41;
    hes(7, 3)                                          = tt49;
    hes(7, 4)                                          = tt55;
    hes(7, 5)                                          = tt59;
    hes(7, 6)                                          = tt61;
    hes(7, 7)                                          = miu(0, 0) * (2.0E+0 * tt21 + tt20 + tt51) + 1.0E+0 * lam(0, 0) * tt21;
    hes(7, 8)                                          = tt63;
    hes(8, 0)                                          = tt17;
    hes(8, 1)                                          = tt31;
    hes(8, 2)                                          = tt42;
    hes(8, 3)                                          = tt50;
    hes(8, 4)                                          = tt56;
    hes(8, 5)                                          = tt60;
    hes(8, 6)                                          = tt62;
    hes(8, 7)                                          = tt63;
    hes(8, 8)                                          = miu(0, 0) * (2.0E+0 * tt35 + tt34 + tt57) + 1.0E+0 * lam(0, 0) * tt35;
}
